<?xml version="1.0" encoding="utf-8" ?>
<rdf:RDF
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:owl="http://www.w3.org/2002/07/owl#"
	xmlns:dct="http://purl.org/dc/terms/"
	xmlns:dbo="http://dbpedia.org/ontology/"
	xmlns:foaf="http://xmlns.com/foaf/0.1/"
	xmlns:prov="http://www.w3.org/ns/prov#"
	xmlns:ns7="http://purl.org/linguistics/gold/" >
  <rdf:Description rdf:about="http://dbpedia.org/resource/Singleton">
    <dbo:wikiPageDisambiguates rdf:resource="http://dbpedia.org/resource/Singleton_pattern" />
  </rdf:Description>
  <rdf:Description rdf:about="http://dbpedia.org/resource/Singleton_pattern">
    <rdf:type rdf:resource="http://dbpedia.org/class/yago/Structure105726345" />
    <rdf:type rdf:resource="http://dbpedia.org/class/yago/WikicatSoftwareDesignPatterns" />
    <rdf:type rdf:resource="http://dbpedia.org/class/yago/Form105930736" />
    <rdf:type rdf:resource="http://dbpedia.org/class/yago/PsychologicalFeature100023100" />
    <rdf:type rdf:resource="http://dbpedia.org/class/yago/Cognition100023271" />
    <rdf:type rdf:resource="http://dbpedia.org/ontology/Disease" />
    <rdf:type rdf:resource="http://dbpedia.org/class/yago/Abstraction100002137" />
    <rdfs:label xml:lang="pl">Singleton (wzorzec projektowy)</rdfs:label>
    <rdfs:label xml:lang="ja">Singleton パターン</rdfs:label>
    <rdfs:label xml:lang="ru">Одиночка (шаблон проектирования)</rdfs:label>
    <rdfs:label xml:lang="it">Singleton</rdfs:label>
    <rdfs:label xml:lang="nl">Singleton (ontwerppatroon)</rdfs:label>
    <rdfs:label xml:lang="pt">Singleton</rdfs:label>
    <rdfs:label xml:lang="zh">单例模式</rdfs:label>
    <rdfs:label xml:lang="es">Singleton</rdfs:label>
    <rdfs:label xml:lang="de">Singleton (Entwurfsmuster)</rdfs:label>
    <rdfs:label xml:lang="en">Singleton pattern</rdfs:label>
    <rdfs:label xml:lang="fr">Singleton (patron de conception)</rdfs:label>
    <rdfs:comment xml:lang="pl">Singleton – kreacyjny wzorzec projektowy, którego celem jest ograniczenie możliwości tworzenia obiektów danej klasy do jednej instancji oraz zapewnienie globalnego dostępu do stworzonego obiektu. Niekiedy wzorzec uogólnia się do przypadku wprowadzenia pewnej maksymalnej liczby obiektów, jakie mogą istnieć w systemie. Niektórzy programiści uznają go za antywzorzec, ponieważ łamie zasady projektowania obiektowego, często bywa nadużywany lub sprowadza się do stworzenia obiektowego zamiennika dla zmiennej globalnej.</rdfs:comment>
    <rdfs:comment xml:lang="en">In software engineering, the singleton pattern is a design pattern that restricts the instantiation of a class to one object. This is useful when exactly one object is needed to coordinate actions across the system. The concept is sometimes generalized to systems that operate more efficiently when only one object exists, or that restrict the instantiation to a certain number of objects. The term comes from the mathematical concept of a singleton.</rdfs:comment>
    <rdfs:comment xml:lang="es">En ingeniería de software, el patrón singleton (instancia única en inglés) es un patrón de diseño diseñado para restringir la creación de objetos pertenecientes a una clase o el valor de un tipo a un único objeto. Su intención consiste en garantizar que una clase sólo tenga una instancia y proporcionar un punto de acceso global a ella. El patrón singleton provee una única instancia global gracias a que:</rdfs:comment>
    <rdfs:comment xml:lang="it">Nella programmazione ad oggetti, il singleton è uno dei pattern fondamentali descritti dalla &quot;Gang of four&quot; nel celebre libro Design Patterns.</rdfs:comment>
    <rdfs:comment xml:lang="fr">En génie logiciel, le singleton est un patron de conception (design pattern) dont l&#39;objectif est de restreindre l&#39;instanciation d&#39;une classe à un seul objet (ou bien à quelques objets seulement). Il est utilisé lorsqu&#39;on a besoin exactement d&#39;un objet pour coordonner des opérations dans un système. Le modèle est parfois utilisé pour son efficacité, lorsque le système est plus rapide ou occupe moins de mémoire avec peu d&#39;objets qu&#39;avec beaucoup d&#39;objets similaires.</rdfs:comment>
    <rdfs:comment xml:lang="ru">Одиночка (англ. Singleton) — порождающий шаблон проектирования, гарантирующий, что в однопоточном приложении будет единственный экземпляр класса с глобальной точкой доступа.</rdfs:comment>
    <rdfs:comment xml:lang="ja">Singleton パターン（シングルトン・パターン）とは、オブジェクト指向のコンピュータプログラムにおける、デザインパターンの1つである。GoF(Gang of Four; 4人のギャングたち)によって定義された。Singleton パターンを用いると、そのクラスのインスタンスが1つしか生成されないことを保証することができる。ロケールやLook&amp;Feelなど、絶対にアプリケーション全体で統一しなければならない仕組みの実装に使用される。</rdfs:comment>
    <rdfs:comment xml:lang="zh">单例模式，也叫单子模式，是一种常用的软件设计模式。在应用这个模式时，单例对象的类必须保证只有一个实例存在。许多时候整个系统只需要拥有一个的全局对象，这样有利于我们协调系统整体的行为。比如在某个服务器程序中，该服务器的配置信息存放在一个文件中，这些配置数据由一个单例对象统一读取，然后服务进程中的其他对象再通过这个单例对象获取这些配置信息。这种方式简化了在复杂环境下的配置管理。 实现单例模式的思路是：一个类能返回对象一个引用(永远是同一个)和一个获得该实例的方法（必须是静态方法，通常使用getInstance这个名称）；当我们调用这个方法时，如果类持有的引用不为空就返回这个引用，如果类保持的引用为空就创建该类的实例并将实例的引用赋予该类保持的引用；同时我们还将该类的构造函数定义为私有方法，这样其他处的代码就无法通过调用该类的构造函数来实例化该类的对象，只有通过该类提供的静态方法来得到该类的唯一实例。 单例模式在多线程的应用场合下必须小心使用。如果当唯一实例尚未创建时，有两个线程同时调用创建方法，那么它们同时没有检测到唯一实例的存在，从而同时各自创建了一个实例，这样就有两个实例被构造出来，从而违反了单例模式中实例唯一的原则。 解决这个问题的办法是为指示类是否已经实例化的变量提供一个互斥锁(虽然这样会降低效率)。</rdfs:comment>
    <rdfs:comment xml:lang="pt">Singleton é um padrão de projeto de software (do inglês Design Pattern). Este padrão garante a existência de apenas uma instância de uma classe, mantendo um ponto global de acesso ao seu objeto. Nota linguística: O termo vem do significado em inglês para um um conjunto (entidade matemática) que contenha apenas um elemento.</rdfs:comment>
    <rdfs:comment xml:lang="de">Das Singleton (selten auch Einzelstück genannt) ist ein in der Softwareentwicklung eingesetztes Entwurfsmuster und gehört zur Kategorie der Erzeugungsmuster (engl. creational patterns). Es stellt sicher, dass von einer Klasse genau ein Objekt existiert. Dieses Singleton ist darüber hinaus üblicherweise global verfügbar. Das Muster ist eines der von der sogenannten Viererbande (GoF) publizierten Muster.</rdfs:comment>
    <rdfs:comment xml:lang="nl">Singleton is een ontwerppatroon om het aantal objecten van een bepaalde klasse tot één te beperken. Met dit ontwerppatroon is het mogelijk om de toegang tot bepaalde systeembronnen altijd via één object te laten gaan. Een toepassing van de singleton is bijvoorbeeld het maken van unieke identificatienummers binnen een programma. Om er altijd zeker van te zijn dat elk identificatienummer uniek is, is het handig om dit door één enkel object te laten genereren. Dit is dan een singleton.</rdfs:comment>
    <owl:sameAs rdf:resource="http://nl.dbpedia.org/resource/Singleton_(ontwerppatroon)" />
    <owl:sameAs rdf:resource="http://yago-knowledge.org/resource/Singleton_pattern" />
    <owl:sameAs rdf:resource="http://www.wikidata.org/entity/Q746699" />
    <owl:sameAs rdf:resource="http://dbpedia.org/resource/Singleton_pattern" />
    <owl:sameAs rdf:resource="http://pl.dbpedia.org/resource/Singleton_(wzorzec_projektowy)" />
    <owl:sameAs rdf:resource="http://de.dbpedia.org/resource/Singleton_(Entwurfsmuster)" />
    <owl:sameAs rdf:resource="http://wikidata.dbpedia.org/resource/Q746699" />
    <owl:sameAs rdf:resource="http://ko.dbpedia.org/resource/싱글턴_패턴" />
    <owl:sameAs rdf:resource="http://fr.dbpedia.org/resource/Singleton_(patron_de_conception)" />
    <owl:sameAs rdf:resource="http://rdf.freebase.com/ns/m.0h9p3" />
    <owl:sameAs rdf:resource="http://cs.dbpedia.org/resource/Singleton" />
    <owl:sameAs rdf:resource="http://ja.dbpedia.org/resource/Singleton_パターン" />
    <owl:sameAs rdf:resource="http://es.dbpedia.org/resource/Singleton" />
    <owl:sameAs rdf:resource="http://it.dbpedia.org/resource/Singleton" />
    <owl:sameAs rdf:resource="http://pt.dbpedia.org/resource/Singleton" />
    <dct:subject rdf:resource="http://dbpedia.org/resource/Category:Software_design_patterns" />
    <dct:subject rdf:resource="http://dbpedia.org/resource/Category:Anti-patterns" />
    <dct:subject rdf:resource="http://dbpedia.org/resource/Category:Articles_with_example_Java_code" />
    <dct:subject rdf:resource="http://dbpedia.org/resource/Category:Software_optimization" />
    <dbo:wikiPageID rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">65041</dbo:wikiPageID>
    <dbo:wikiPageRevisionID rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">743111577</dbo:wikiPageRevisionID>
    <dbo:wikiPageExternalLink rdf:resource="http://howtodoinjava.com/2012/10/22/singleton-design-pattern-in-java/" />
    <dbo:wikiPageExternalLink rdf:resource="http://www.javaexperience.com/design-patterns-singleton-design-pattern/" />
    <dbo:wikiPageExternalLink rdf:resource="http://code.google.com/p/google-singleton-detector/" />
    <dbo:wikiPageExternalLink rdf:resource="http://www-128.ibm.com/developerworks/java/library/j-dcl.html?loc=j" />
    <dbo:wikiPageExternalLink rdf:resource="http://code.google.com/p/google-singleton-detector/wiki/WhySingletonsAreControversial" />
    <dbo:wikiPageExternalLink rdf:resource="http://www.ibm.com/developerworks/library/co-single/" />
    <dbo:wikiPageExternalLink rdf:resource="http://ruby-doc.org/stdlib/libdoc/singleton/rdoc/index.html" />
    <dbo:wikiPageExternalLink rdf:resource="http://www.javaworld.com/javaworld/jw-04-2003/jw-0425-designpatterns.html" />
    <dbo:wikiPageExternalLink rdf:resource="http://csharpindepth.com/Articles/General/Singleton.aspx" />
    <dbo:wikiPageExternalLink rdf:resource="http://msdn.microsoft.com/en-us/library/ms998426.aspx" />
    <foaf:depiction rdf:resource="http://commons.wikimedia.org/wiki/Special:FilePath/Singleton_pattern_uml.png" />
    <foaf:isPrimaryTopicOf rdf:resource="http://en.wikipedia.org/wiki/Singleton_pattern" />
    <dbo:thumbnail rdf:resource="http://commons.wikimedia.org/wiki/Special:FilePath/Singleton_pattern_uml.png?width=300" />
    <prov:wasDerivedFrom rdf:resource="http://en.wikipedia.org/wiki/Singleton_pattern?oldid=743111577" />
    <dbo:abstract xml:lang="de">Das Singleton (selten auch Einzelstück genannt) ist ein in der Softwareentwicklung eingesetztes Entwurfsmuster und gehört zur Kategorie der Erzeugungsmuster (engl. creational patterns). Es stellt sicher, dass von einer Klasse genau ein Objekt existiert. Dieses Singleton ist darüber hinaus üblicherweise global verfügbar. Das Muster ist eines der von der sogenannten Viererbande (GoF) publizierten Muster.</dbo:abstract>
    <dbo:abstract xml:lang="pl">Singleton – kreacyjny wzorzec projektowy, którego celem jest ograniczenie możliwości tworzenia obiektów danej klasy do jednej instancji oraz zapewnienie globalnego dostępu do stworzonego obiektu. Niekiedy wzorzec uogólnia się do przypadku wprowadzenia pewnej maksymalnej liczby obiektów, jakie mogą istnieć w systemie. Niektórzy programiści uznają go za antywzorzec, ponieważ łamie zasady projektowania obiektowego, często bywa nadużywany lub sprowadza się do stworzenia obiektowego zamiennika dla zmiennej globalnej.</dbo:abstract>
    <dbo:abstract xml:lang="pt">Singleton é um padrão de projeto de software (do inglês Design Pattern). Este padrão garante a existência de apenas uma instância de uma classe, mantendo um ponto global de acesso ao seu objeto. Nota linguística: O termo vem do significado em inglês para um um conjunto (entidade matemática) que contenha apenas um elemento. Alguns projetos necessitam que algumas classes tenham apenas uma instância. Por exemplo, em uma aplicação que precisa de uma infraestrutura de log de dados, pode-se implementar uma classe no padrão singleton. Desta forma existe apenas um objeto responsável pelo log em toda a aplicação que é acessível unicamente através da classe singleton.</dbo:abstract>
    <dbo:abstract xml:lang="it">Nella programmazione ad oggetti, il singleton è uno dei pattern fondamentali descritti dalla &quot;Gang of four&quot; nel celebre libro Design Patterns.</dbo:abstract>
    <dbo:abstract xml:lang="nl">Singleton is een ontwerppatroon om het aantal objecten van een bepaalde klasse tot één te beperken. Met dit ontwerppatroon is het mogelijk om de toegang tot bepaalde systeembronnen altijd via één object te laten gaan. Een toepassing van de singleton is bijvoorbeeld het maken van unieke identificatienummers binnen een programma. Om er altijd zeker van te zijn dat elk identificatienummer uniek is, is het handig om dit door één enkel object te laten genereren. Dit is dan een singleton. Een singleton wordt gemaakt door een klasse te definiëren met een methode die een nieuw object aanmaakt als het nog niet bestaat en een bestaand object teruggeeft als er al wel een dergelijk object bestaat.</dbo:abstract>
    <dbo:abstract xml:lang="zh">单例模式，也叫单子模式，是一种常用的软件设计模式。在应用这个模式时，单例对象的类必须保证只有一个实例存在。许多时候整个系统只需要拥有一个的全局对象，这样有利于我们协调系统整体的行为。比如在某个服务器程序中，该服务器的配置信息存放在一个文件中，这些配置数据由一个单例对象统一读取，然后服务进程中的其他对象再通过这个单例对象获取这些配置信息。这种方式简化了在复杂环境下的配置管理。 实现单例模式的思路是：一个类能返回对象一个引用(永远是同一个)和一个获得该实例的方法（必须是静态方法，通常使用getInstance这个名称）；当我们调用这个方法时，如果类持有的引用不为空就返回这个引用，如果类保持的引用为空就创建该类的实例并将实例的引用赋予该类保持的引用；同时我们还将该类的构造函数定义为私有方法，这样其他处的代码就无法通过调用该类的构造函数来实例化该类的对象，只有通过该类提供的静态方法来得到该类的唯一实例。 单例模式在多线程的应用场合下必须小心使用。如果当唯一实例尚未创建时，有两个线程同时调用创建方法，那么它们同时没有检测到唯一实例的存在，从而同时各自创建了一个实例，这样就有两个实例被构造出来，从而违反了单例模式中实例唯一的原则。 解决这个问题的办法是为指示类是否已经实例化的变量提供一个互斥锁(虽然这样会降低效率)。</dbo:abstract>
    <dbo:abstract xml:lang="ru">Одиночка (англ. Singleton) — порождающий шаблон проектирования, гарантирующий, что в однопоточном приложении будет единственный экземпляр класса с глобальной точкой доступа.</dbo:abstract>
    <dbo:abstract xml:lang="en">In software engineering, the singleton pattern is a design pattern that restricts the instantiation of a class to one object. This is useful when exactly one object is needed to coordinate actions across the system. The concept is sometimes generalized to systems that operate more efficiently when only one object exists, or that restrict the instantiation to a certain number of objects. The term comes from the mathematical concept of a singleton. There are some who are critical of the singleton pattern and consider it to be an anti-pattern in that it is frequently used in scenarios where it is not beneficial, introduces unnecessary restrictions in situations where a sole instance of a class is not actually required, and introduces global state into an application.</dbo:abstract>
    <dbo:abstract xml:lang="ja">Singleton パターン（シングルトン・パターン）とは、オブジェクト指向のコンピュータプログラムにおける、デザインパターンの1つである。GoF(Gang of Four; 4人のギャングたち)によって定義された。Singleton パターンを用いると、そのクラスのインスタンスが1つしか生成されないことを保証することができる。ロケールやLook&amp;Feelなど、絶対にアプリケーション全体で統一しなければならない仕組みの実装に使用される。</dbo:abstract>
    <dbo:abstract xml:lang="es">En ingeniería de software, el patrón singleton (instancia única en inglés) es un patrón de diseño diseñado para restringir la creación de objetos pertenecientes a una clase o el valor de un tipo a un único objeto. Su intención consiste en garantizar que una clase sólo tenga una instancia y proporcionar un punto de acceso global a ella. El patrón singleton se implementa creando en nuestra clase un método que crea una instancia del objeto sólo si todavía no existe alguna. Para asegurar que la clase no puede ser instanciada nuevamente se regula el alcance del constructor (con modificadores de acceso como protegido o privado). La instrumentación del patrón puede ser delicada en programas con múltiples hilos de ejecución. Si dos hilos de ejecución intentan crear la instancia al mismo tiempo y esta no existe todavía, sólo uno de ellos debe lograr crear el objeto. La solución clásica para este problema es utilizar exclusión mutua en el método de creación de la clase que implementa el patrón. Las situaciones más habituales de aplicación de este patrón son aquellas en las que dicha clase controla el acceso a un recurso físico único (como puede ser el ratón o un archivo abierto en modo exclusivo) o cuando cierto tipo de datos debe estar disponible para todos los demás objetos de la aplicación. El patrón singleton provee una única instancia global gracias a que: 
*  La propia clase es responsable de crear la única instancia. 
*  Permite el acceso global a dicha instancia mediante un método de clase. 
*  Declara el constructor de clase como privado para que no sea instanciable directamente.</dbo:abstract>
    <dbo:abstract xml:lang="fr">En génie logiciel, le singleton est un patron de conception (design pattern) dont l&#39;objectif est de restreindre l&#39;instanciation d&#39;une classe à un seul objet (ou bien à quelques objets seulement). Il est utilisé lorsqu&#39;on a besoin exactement d&#39;un objet pour coordonner des opérations dans un système. Le modèle est parfois utilisé pour son efficacité, lorsque le système est plus rapide ou occupe moins de mémoire avec peu d&#39;objets qu&#39;avec beaucoup d&#39;objets similaires.</dbo:abstract>
    <ns7:hypernym rdf:resource="http://dbpedia.org/resource/Pattern" />
  </rdf:Description>
  <rdf:Description rdf:about="http://dbpedia.org/resource/Design_Pattern_-_Singleton">
    <dbo:wikiPageRedirects rdf:resource="http://dbpedia.org/resource/Singleton_pattern" />
  </rdf:Description>
  <rdf:Description rdf:about="http://dbpedia.org/resource/Singleton_Pattern">
    <dbo:wikiPageRedirects rdf:resource="http://dbpedia.org/resource/Singleton_pattern" />
  </rdf:Description>
  <rdf:Description rdf:about="http://en.wikipedia.org/wiki/Singleton_pattern">
    <foaf:primaryTopic rdf:resource="http://dbpedia.org/resource/Singleton_pattern" />
  </rdf:Description>
</rdf:RDF>